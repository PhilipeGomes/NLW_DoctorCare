/*==== GERAL ====================== */
/* seletor universal -> pega todos os elementos da pagina */
* {
    margin: 0;
    /* Fixa o valor da borta nao evitando
    que a borda aumente de tamanho em função
    de um paddind por exemplo
    fixando assim nos 375px que eu passei 
    no hearder */
    padding: 0;
    box-sizing: border-box;
}

:root {
    /*  1rem = 10px */
    font-size: 62.5%;

    --primary-color: hsl(170, 100%, 26%);
    --headline: hsl(210, 11%, 15%);
    --paragraph: hsl(210, 9%, 31%);

    --brand-beige: hsl(39, 100%, 97%);
    --brand-light: hsl(148, 23%, 89%);

    --nav-height: 7.2rem;
}

html,
body {
    width: 100%;
    height: 100%;
}

/* Para a fonta funcionar eu precisei importar no html */
/* Body porque essa letra é a mesma pra todo o codigo */
body {
    font-family: 'DM Sans';
    /* equivalente a 16px */
    font-size: 1.6rem;
    text-align: center;

    /* sobrepõe a barra de rolagem
    nao permetindo que exceda o tamanho
    da pagina*/
    overflow: overlay;
}

.wrapper {
    /* equivalente a 375px */
    width: 37.5rem;
    /* Preencha automaticamente */
    /* margin-left: auto;
    margin-right: auto; */
    margin-inline: auto;

    padding-inline: 2.4rem;
}

ul {
    list-style: none;
}

/*==== HEADER ====================== */


header {
    /* equivalente a 41px */
    margin-top: calc(4.1rem + var(--nav-height));

}

/* Criar uma tag HTML pelo css */
/* Essa tag pelo que entendi é responsavel pela cor de fundo */
header::before {
    content: "";
    /* vw -> viewport wight -> largura de toda
    janela de exibição */
    /* trocamos o 100vw para 100% pelo 
    bug do css que soma os 100 mas o scroll
    lateral o que gera um under scroll */
    width: 100%;
    /* essa altura, é a até onde vai a altura do verde */
    height: calc(108rem + var(--nav-height));
    background-color: var(--brand-light);
    display: block;

    /* confuguração dos planos, para que esse verde não fique por cima */
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
}

/* o px é uma unidade fixa. Se o user mudar o tamanho por acessibilidade, não muda. 
Vai permancer 14px */
header h4 {
    /* equivalente a 14px */
    font-size: 1.4rem;
    color: var(--primary-color);
    margin-bottom: 1.6rem;
}

headar h1 {
    font-size: 3.4rem;
    color: var(--headline);
    line-height: 130%;

    margin-bottom: 2.4rem;
}

header p {
    font-size: 1.8rem;
    line-height: 150%;
    font-weight: 400;
    color: var(--paragraph);
    margin-bottom: 3.2rem;
}

header button {
    background: var(--primary-color);

    border: none;
    border-radius: 4rem;

    margin-bottom: 6rem;

    height: 6.2rem;
    width: 23.3rem;

    color: white;
    text-transform: uppercase;
    font-size: 1.4rem;
    font-weight: 700;
    /* display block e inline mexem com as
caixas ao redor  */
    /* flex mexe com os filhos, com os elementos
que existem dentro*/
    /* o flex pega os elementos e os tornam
flexiveis para alteração  destravando algumas
opções de modificação*/
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1.6rem;

    margin-left: auto;
    margin-right: auto;
}

header img {
    width: 26.4rem;
    display: block;
    margin-inline: auto;
}

.stats {
    width: 32.7rem;
    /*    padding-top: 4rem;
    padding-bottom: 4rem; */
    /* parecido com o margin line, o paddingo-block
    funciona no eixo y, mexendo em cima e embaixo
    substituindo os dois padding acima */
    padding-block: 4rem;
    /* margin-left: auto;
    margin-right: auto; */
    /* subistitui os comandos acima
porque diz respeito ao eixo x englobando a direita
e a esquerda */
    margin-inline: auto;

    background-color: var(--brand-beige);
    border: 1px solid var(--brand-light);
    border-radius: 0.6rem;

    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: 6rem;
}

.stat h3 {
    font-size: 4.8rem;
    color: var(--headline);
    line-height: 130%;

    margin-bottom: 0.4rem;
}


.stat p {
    margin: 0;
    color: var(--primary-color);
    font-size: 1.6rem;
    line-height: 150%;
}

/*==== NAVIGATION ====================== */
nav {
    display: flex;

    /* padding-inline: 2.4rem;
       padding-block: 1.6rem; */

    /*  os dois de cima foram substituido 
    pelo de baixo, primeiro eixo y depois
    eixo x*/
    height: var(--nav-height);

    position: fixed;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
}

nav .wrapper {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

nav.scroll {
    background: var(--primary-color);
    width: 100vw;
    position: fixed;
    top: 0;
}

nav.scroll svg:nth-child(1) path {
    fill: white;
}

nav.scroll button path {
    stroke: white;
}

nav button {
    background: none;
    border: none;
    cursor: pointer;
}

/*==== Menu-expanded ====================== */
body.menu-expanded {
    overflow: hidden;
}

/* não exibe todos os que estao no 
primeiro nivel, exceto o nav */
/* pseudo class :not() */
body.menu-expanded > :not(nav) {
    display: none;
}

.menu,
.close-menu,
body.menu-expanded .open-menu {
    opacity: 0;
    visibility: hidden;
}

body.menu-expanded .menu,
body.menu-expanded .close-menu {
    opacity: 1;
    visibility: visible;
}

body.menu-expanded .menu {
    position: fixed;
    top: 0;
    left: 0;
    background: var(--primary-color);

    width: 100vw;
    height: 100vh;

    padding-top: var(--nav-height);
}

body.menu-expanded nav {
    position: relative;
}

.menu ul:nth-child(1) {
    display: flex;
    flex-direction: column;
    gap: 4.8rem;
    margin-top: 6rem;

    font-weight: 700;
    font-size: 2.4rem;
    line-height: 3.1rem;
}

.menu ul a {
    color: white;
    text-decoration: none;
}

.menu .button {
    background: white;
    border-radius: 4rem;
    font-weight: 700;
    font-size: 1.8rem;
    line-height: 2.3rem;
    text-transform: uppercase;
    text-decoration: none;

    color: var(--primary-color);

    display: inline-block;
    padding: 1.6rem 3.2rem;

    margin-top: 4.8rem;
    margin-bottom: 8rem;
}

.social-links {
    display: flex;
    gap: 3.2rem;
    align-items: center;
    justify-content: center;
}

body.menu-expanded .logo,
body.menu-expanded button {
    position: relative;
    z-index: 10;
}

body.menu-expanded .logo path{
    fill: white;
}

body.menu-expanded button path{
    stroke: white;
}